version: '3.8'

networks:
  petpot_network:
    driver: bridge
  glitchtip_network:
    driver: bridge

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_HOST_AUTH_METHOD: 'trust' # Consider removing this and setting a password
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - glitchtip_network

  redis:
    image: redis
    restart: unless-stopped
    networks:
      - glitchtip_network

  web:
    image: glitchtip/glitchtip
    depends_on:
      - postgres
      - redis
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - uploads:/code/uploads
    networks:
      - glitchtip_network

  worker:
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - uploads:/code/uploads
    networks:
      - glitchtip_network

  migrate:
    image: glitchtip/glitchtip
    command: './manage.py migrate'
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    networks:
      - glitchtip_network

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   depends_on:
  #     - postgres
  #     - redis
  #   ports:
  #     - 22181:2181
  #   networks:
  #     - petpot_network

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   networks:
  #     - petpot_network

  # admin:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.admin
  #   env_file:
  #     - .env
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - 4050:4050
  #   networks:
  #     - petpot_network

  # booking:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.booking
  #   env_file:
  #     - .env
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - 4070:4070
  #   networks:
  #     - petpot_network

  # petpot:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.petpot
  #   env_file:
  #     - .env
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - 4030:4030
  #   networks:
  #     - petpot_network

volumes:
  pg-data:
  uploads:
